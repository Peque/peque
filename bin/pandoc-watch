#!/bin/bash

if [ -z "$1" ]; then
	echo "No input file provided!"
	echo "Usage: $0 MARKDOWN_FILE"
	exit 0
fi

INPUT="$(pwd)/$1"
ORIGIN=$(dirname "$INPUT")
DESTINATION="$HOME/.pandoc-watch"
REVEALJS="https://github.com/hakimel/reveal.js/archive/3.2.0.tar.gz"
REVEALJS_VERSION="$DESTINATION/.revealjs_version"
# TODO: get as parameter
THEME="custom"
BACKGROUND="figures/background.svg"

function generate {
	INDEX="$DESTINATION/index.html"
	pandoc \
		"$INPUT" \
		-s \
		--slide-level=2 \
		-f markdown \
		-t revealjs \
		-o "$INDEX"
	sed -i -e "s@reveal\.min\.css@reveal\.css@g" "$INDEX"
	sed -i -e "s@reveal\.min\.js@reveal\.js@g" "$INDEX"
	sed -i -e "s@reveal\.js/@@g" "$INDEX"
	sed -i -e "/id=\"theme\"/s/\/[^\/]*\.css/\/$THEME\.css/g" "$INDEX"
	sed -i -e "s@<section>@<section data-background=\"$BACKGROUND\">@g" "$INDEX"
	rsync --exclude .git -av "$ORIGIN/" "$DESTINATION/"
}

# Download and initialize reveal.js
if [ -z $(cat "$REVEALJS_VERSION" | grep "$REVEALJS") ]; then
	mkdir -p "$DESTINATION"
	curl -L --output "$DESTINATION/reveal.tar.gz" -O "$REVEALJS"
	tar -xf "$DESTINATION/reveal.tar.gz" -C "$DESTINATION" --strip-components=1
	rm "$DESTINATION/reveal.tar.gz"
	echo -n "$REVEALJS"> "$REVEALJS_VERSION"
fi

# Update node.js packages
cd "$DESTINATION"
npm install

# Generate initial HTML file
generate

# Serve
grunt serve &

# Watch for changes in the markdown file and regenerate HTML
while true; do
	CHANGE=$(inotifywait -e close_write,moved_to,create "$ORIGIN")
	CHANGE=${CHANGE#$ORIGIN/ * }
	if [ "$CHANGE" = "$1" ]; then
		generate
	fi
done
